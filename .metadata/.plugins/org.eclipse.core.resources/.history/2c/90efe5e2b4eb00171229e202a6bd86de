package com.bridgeit.todo.controller;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.bridgeit.todo.model.ErrorMessage;
import com.bridgeit.todo.model.Note;
import com.bridgeit.todo.model.User;
import com.bridgeit.todo.service.NoteService;
import com.bridgeit.todo.service.UserService;

public class NoteController {
	
	@Autowired
	NoteService noteService;

	@Autowired
	UserService userService;

	
	@RequestMapping(value = "/addNote", method = RequestMethod.POST)
	public ResponseEntity<ErrorMessage> saveNotes(Note note, int id) {

		ErrorMessage message = new ErrorMessage();
		if (id == 0) {
			message.setResponseMessage("Data Successfully added ");
		}
		User user1 = userService.getUserById(id);
		Date date = new Date();
		note.setCreatedDate(date);
		note.setModifiedDate(date);

		note.setUser(user1);
		int userId = noteService.saveNotes(note);

		if (userId != 0) {
			
			message.setResponseMessage("Data Successfully inserted ");
			return ResponseEntity.status(HttpStatus.CREATED).body(message);
		}
		message.setResponseMessage("Note could not be added");
		return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(message);
	}
	
	@RequestMapping(value = "/noteList", method = RequestMethod.GET)
	public ResponseEntity<List<Note>> findAllNote() {
		
		    ErrorMessage errorMessage = new ErrorMessage();

		     int id = VerifyJwt.verify(Authorization);
		     logger.info("Verifying token for header");

		   if (id == 0) {
			 logger.info("Cheking user is null or not");
			 return new ResponseEntity(HttpStatus.NOT_FOUND);
	 }
		 
		     User user1 = userService.getUserById(id);
		 if(user1!=null) {
		     logger.info("check User found");
		     List<Note> notes = noteService.findAllNote(user1);
		
	         List<Note> collabdNotes=noteService.getSharedNotes(user1.getId());
	         notes.addAll(collabdNotes);
	         logger.info("merging user collaborator with note");
	         return new  ResponseEntity(notes, HttpStatus.OK);
		}
		     return new ResponseEntity(HttpStatus.BAD_REQUEST);	
	}

}
